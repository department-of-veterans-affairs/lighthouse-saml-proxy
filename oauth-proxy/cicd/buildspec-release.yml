######################################################################
#   Oauth Proxy CodeBuild Release
#
#
# Tool Links:
#  - CodeBuild - https://docs.aws.amazon.com/codebuild/index.html
#  - CodeBuild Environmental Variables - https://docs.aws.amazon.com/codebuild/latest/userguide/build-env-ref-env-vars.html
#  - CodeBuild Enironment Image - ECS deployer - https://github.com/department-of-veterans-affairs/lighthouse-codebuild-containers/tree/main/ecs-deployer
#  - AWS CLI 2.0 - https://docs.aws.amazon.com/cli/latest/userguide/cli-chap-welcome.html
#  - Git Hub CLI - https://github.com/cli/cli
#
# All Custom scripts are on the CodeBuild Environment container.
# https://github.com/department-of-veterans-affairs/lighthouse-codebuild-containers/tree/main/
#
# Custom Scripts:
#  - slackpost.sh
#  - increment.sh
#  - gh-status.sh
#######################################################################
version: 0.2
env:
  shell: bash
  variables:
    DEPLOY: "true"
    REPO: "vets-saml-proxy"
    IMAGE: "oauth-proxy"
    # Checks that are not included for the ghstatus script.
    XCHECKS: "oauth-proxy-release,saml-proxy,jenkins"
  parameter-store:
    GITHUB_TOKEN: "/dvp/devops/va_bot_github_token"
    # SLACK_WEBHOOK should be a webhook that posts to the Slack channel you want notifications to go to
    SLACK_WEBHOOK: "/dvp/devops/codebuild_slack_webhook_lighthouse"
phases:
  pre_build:
    commands:
      # gh tool presets
      - gh config set prompt disabled
      - gh config set git_protocol ssh
      - COMMIT_HASH=${CODEBUILD_RESOLVED_SOURCE_VERSION}
      # print env variables to Cloud Watch incase of failure
      - printenv
  build:
    commands:
      - slackpost.sh -t started "started OAuth Proxy release..."
      # check ci status of current commit hash
      - gh-status.sh -r ${REPO} -c ${COMMIT_HASH} -x ${XCHECKS}
      # find old tag
      - old_tag=$(git tag --sort=-creatordate | grep fargate-oauth-proxy | head -1)
      - echo "found ${old_tag} - incrementing..."
      # create new tag
      - new_tag=$(increment.sh ${old_tag})
      - echo "creating ${new_tag} release"
      # create release
      - gh release create ${new_tag}
      - echo tag image
      # tag ecr image with release
      - make tag IMAGE=${IMAGE} TAG=${COMMIT_HASH:0:7} NEW_TAG=${new_tag#*/}
      - |
        if [[ ${DEPLOY} == "true" ]]; then
          echo "initiating deploy for ${new_tag}"
          aws codebuild start-build --project-name oauth-proxy-deploy --environment-variables-override name=RELEASE,value=${new_tag#*/}
        fi
  post_build:
    commands:
      # post to slack.
      - |
        if [[ ${CODEBUILD_BUILD_SUCCEEDING} -eq 0 ]]; then
          slackpost.sh -t failure "there was an error with the release process for OAuth Proxy!."
        else
          slackpost.sh -t success "OAuth Proxy release ${new_tag} was successful."
        fi
